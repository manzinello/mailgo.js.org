(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{118:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return m}));var a=t(0),i=t.n(a);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function b(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=i.a.createContext({}),p=function(e){var n=i.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):b(b({},n),e)),t},d=function(e){var n=p(e.components);return i.a.createElement(c.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},u=i.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),d=p(t),u=a,m=d["".concat(o,".").concat(u)]||d[u]||s[u]||l;return t?i.a.createElement(m,b(b({ref:n},c),{},{components:t})):i.a.createElement(m,b({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,o=new Array(l);o[0]=u;var b={};for(var r in n)hasOwnProperty.call(n,r)&&(b[r]=n[r]);b.originalType=e,b.mdxType="string"==typeof e?e:a,o[1]=b;for(var c=2;c<l;c++)o[c]=t[c];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},98:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return b})),t.d(n,"toc",(function(){return r})),t.d(n,"default",(function(){return p}));var a=t(3),i=t(7),l=(t(0),t(118)),o={id:"configuration",title:"Configuration",sidebar_label:"Configuration"},b={unversionedId:"configuration",id:"configuration",isDocsHomePage:!1,title:"Configuration",description:"Here the definition of the MailgoConfig object in TypeScript (available after version 0.9.0)",source:"@site/docs/configuration.md",slug:"/configuration",permalink:"/docs/configuration",editUrl:"https://github.com/manzinello/mailgo.dev/tree/master/docs/docs/configuration.md",version:"current",lastUpdatedBy:"Matteo Manzinello",lastUpdatedAt:1607014027,sidebar_label:"Configuration",sidebar:"docs",previous:{title:"Skype",permalink:"/docs/skype"},next:{title:"Dark mode",permalink:"/docs/dark-mode"}},r=[{value:"MailgoConfig type",id:"mailgoconfig-type",children:[]},{value:"Mailgo config parameters",id:"mailgo-config-parameters",children:[{value:"mailto",id:"mailto",children:[]},{value:"tel",id:"tel",children:[]},{value:"sms // WIP",id:"sms--wip",children:[]},{value:"desktop",id:"desktop",children:[]},{value:"mobile",id:"mobile",children:[]},{value:"actions",id:"actions",children:[]},{value:"details",id:"details",children:[]},{value:"dark",id:"dark",children:[]},{value:"lang",id:"lang",children:[]},{value:"validateEmail",id:"validateemail",children:[]},{value:"validateTel",id:"validatetel",children:[]},{value:"office365",id:"office365",children:[]},{value:"showFooter",id:"showfooter",children:[]},{value:"initEvent",id:"initevent",children:[]},{value:"listenerOptions",id:"listeneroptions",children:[]},{value:"loadCSS",id:"loadcss",children:[]}]},{value:"Mailgo configuration in window",id:"mailgo-configuration-in-window",children:[]}],c={toc:r};function p(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)("p",null,"Here the definition of the ",Object(l.b)("inlineCode",{parentName:"p"},"MailgoConfig")," object in TypeScript (available after version ",Object(l.b)("inlineCode",{parentName:"p"},"0.9.0"),")"),Object(l.b)("h2",{id:"mailgoconfig-type"},"MailgoConfig type"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-ts"},"type MailgoConfig = {\n  mailto?: boolean; // enable mailgo for mailto, default is obviously true\n  tel?: boolean; // enable mailgo for tel, default is true\n  sms?: boolean; // enable mailgo for sms, at the moment default is false\n\n  desktop?: boolean; // enable mailgo for desktop, default true\n  mobile?: boolean; // enable mailgo for mobile, default true\n\n  actions?: MailgoActions; // enable/disable actions, default all trues\n  details?: MailgoDetails; // show/hide the modal details\n\n  dark?: boolean; // dark mode for mailgo, default false\n\n  lang?: string; // language of the modal, default is english\n\n  validateEmail?: boolean; // validate an email, default is true\n  validateTel?: boolean; // validate a phone number, default is true\n\n  office365?: boolean; // the particular case of Outlook link: can be outlook.live.com or outlook.office365.com, by default the first but with this parameter you can change the behaviour\n\n  showFooter?: boolean; // show the footer with a link to mailgo.dev, default true, please!\n\n  initEvent?: string; // the event which is attached the mailgo init, default DOMContentLoaded\n  listenerOptions?: ListenerOptions | boolean; // the options of the listener if initEvent is specified\n\n  loadCSS?: boolean; // loadCSS for mailgo, default true\n};\n")),Object(l.b)("p",null,"then initialize ",Object(l.b)("inlineCode",{parentName:"p"},"mailgo")," following this definition"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-ts"},"function mailgo(mailgoConfig?: MailgoConfig): void;\n")),Object(l.b)("h2",{id:"mailgo-config-parameters"},"Mailgo config parameters"),Object(l.b)("h3",{id:"mailto"},"mailto"),Object(l.b)("p",null,"TYPE: ",Object(l.b)("inlineCode",{parentName:"p"},"boolean")),Object(l.b)("p",null,"DEFAULT ",Object(l.b)("inlineCode",{parentName:"p"},"true")),Object(l.b)("p",null,"Enable or not ",Object(l.b)("inlineCode",{parentName:"p"},"mailto")," links in mailgo"),Object(l.b)("h3",{id:"tel"},"tel"),Object(l.b)("p",null,"TYPE: ",Object(l.b)("inlineCode",{parentName:"p"},"boolean")),Object(l.b)("p",null,"DEFAULT ",Object(l.b)("inlineCode",{parentName:"p"},"true")),Object(l.b)("p",null,"Enable or not ",Object(l.b)("inlineCode",{parentName:"p"},"tel")," and ",Object(l.b)("inlineCode",{parentName:"p"},"callto")," links in mailgo"),Object(l.b)("h3",{id:"sms--wip"},"sms // WIP"),Object(l.b)("p",null,"TYPE: ",Object(l.b)("inlineCode",{parentName:"p"},"boolean")),Object(l.b)("p",null,"DEFAULT ",Object(l.b)("inlineCode",{parentName:"p"},"false")),Object(l.b)("p",null,"Enable or not ",Object(l.b)("inlineCode",{parentName:"p"},"sms")," links in mailgo, by default it is disabled because it is WIP feature"),Object(l.b)("h3",{id:"desktop"},"desktop"),Object(l.b)("p",null,"TYPE: ",Object(l.b)("inlineCode",{parentName:"p"},"boolean")),Object(l.b)("p",null,"DEFAULT ",Object(l.b)("inlineCode",{parentName:"p"},"true")),Object(l.b)("p",null,"Enable mailgo for desktop (uses user-agent)"),Object(l.b)("h3",{id:"mobile"},"mobile"),Object(l.b)("p",null,"TYPE: ",Object(l.b)("inlineCode",{parentName:"p"},"boolean")),Object(l.b)("p",null,"DEFAULT ",Object(l.b)("inlineCode",{parentName:"p"},"true")),Object(l.b)("p",null,"Enable mailgo for mobile (uses user-agent)"),Object(l.b)("h3",{id:"actions"},"actions"),Object(l.b)("p",null,"For ",Object(l.b)("inlineCode",{parentName:"p"},"actions")," parameter you can refer to this definition"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-ts"},'type MailgoAction =\n  | "gmail"\n  | "outlook"\n  | "yahoo"\n  | "telegram"\n  | "whatsapp"\n  | "skype"\n  | "copy"\n  | "default";\n\ntype MailgoActions = {\n  [action in MailgoAction]: boolean;\n};\n')),Object(l.b)("p",null,"DEFAULT all the values ",Object(l.b)("inlineCode",{parentName:"p"},"true")),Object(l.b)("p",null,"With this attribute you can enable/disable some actions in mailgo. By default all the values of ",Object(l.b)("inlineCode",{parentName:"p"},"actions")," are ",Object(l.b)("inlineCode",{parentName:"p"},"true")," (so enabled), but you can exclude some of them, for example with a config like"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-ts"},"let mailgoConfig: MailgoConfig = {\n  actions: {\n    yahoo: false,\n    skype: false,\n  },\n};\n")),Object(l.b)("p",null,"you are excluding Yahoo Mail and Skype. At the moment in mailgo you can exclude every actions except for ",Object(l.b)("inlineCode",{parentName:"p"},"copy")," and ",Object(l.b)("inlineCode",{parentName:"p"},"default"),", that are always enabled."),Object(l.b)("h3",{id:"details"},"details"),Object(l.b)("p",null,"You can define which elements of the details (cc, bcc, subject...) appears in modal, obviously if they are defined in the link. By default all the details are shown, but you can decide it using this attribute."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-ts"},'type MailgoDetail = "cc" | "bcc" | "subject" | "body" | "msg";\n\ntype MailgoDetails = {\n  [detail in MailgoDetail]?: boolean;\n};\n')),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"cc"),", ",Object(l.b)("inlineCode",{parentName:"p"},"bcc"),", ",Object(l.b)("inlineCode",{parentName:"p"},"subject")," and ",Object(l.b)("inlineCode",{parentName:"p"},"body")," are the details for mailto, ",Object(l.b)("inlineCode",{parentName:"p"},"msg")," the detail for tel/sms."),Object(l.b)("p",null,"So for example you can pass this configuration"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-ts"},"let mailgoConfig: MailgoConfig = {\n  details: {\n    subject: false,\n    body: false,\n  },\n};\n")),Object(l.b)("p",null,"if you want to hide subject and body attributes in the modal."),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"details")," attribute works on the hiding/showing elements in the modal, not directly on parameters of the link. If you specify, for example, not to show the subject in the detail of the modal the subject will be not removed from the link, is simply doesn't appear in the modal."),Object(l.b)("h3",{id:"dark"},"dark"),Object(l.b)("p",null,"TYPE ",Object(l.b)("inlineCode",{parentName:"p"},"boolean")),Object(l.b)("p",null,"DEFAULT ",Object(l.b)("inlineCode",{parentName:"p"},"false")),Object(l.b)("p",null,"If specified and equal to ",Object(l.b)("inlineCode",{parentName:"p"},"true")," the mailgo dark mode is enabled for every mailgo modal in the website/page."),Object(l.b)("h3",{id:"lang"},"lang"),Object(l.b)("p",null,"TYPE: ",Object(l.b)("inlineCode",{parentName:"p"},"string")),Object(l.b)("p",null,"(DEFAULT ",Object(l.b)("inlineCode",{parentName:"p"},"en"),")"),Object(l.b)("p",null,"The language of mailgo. Default is ",Object(l.b)("inlineCode",{parentName:"p"},"en"),"."),Object(l.b)("p",null,"Possible values can be found in ",Object(l.b)("inlineCode",{parentName:"p"},"i18n.json")," file in the repository, under ",Object(l.b)("inlineCode",{parentName:"p"},"translations")," attribute."),Object(l.b)("p",null,"The lang specified here is used only in website where is not specified ",Object(l.b)("inlineCode",{parentName:"p"},"lang")," attribute in ",Object(l.b)("inlineCode",{parentName:"p"},"<html>")," tag."),Object(l.b)("p",null,"You can force the use of the ",Object(l.b)("inlineCode",{parentName:"p"},"lang")," specified using the paramter ",Object(l.b)("inlineCode",{parentName:"p"},"forceLang"),"."),Object(l.b)("h3",{id:"validateemail"},"validateEmail"),Object(l.b)("p",null,"TYPE ",Object(l.b)("inlineCode",{parentName:"p"},"boolean")),Object(l.b)("p",null,"DEFAULT ",Object(l.b)("inlineCode",{parentName:"p"},"true")),Object(l.b)("p",null,"To validate or not the email address(es), if the value is not valid the modal will not appear."),Object(l.b)("h3",{id:"validatetel"},"validateTel"),Object(l.b)("p",null,"TYPE ",Object(l.b)("inlineCode",{parentName:"p"},"boolean")),Object(l.b)("p",null,"DEFAULT ",Object(l.b)("inlineCode",{parentName:"p"},"true")),Object(l.b)("p",null,"To validate or not the phone number, if the value is not valid the modal will not appear."),Object(l.b)("h3",{id:"office365"},"office365"),Object(l.b)("p",null,"TYPE: ",Object(l.b)("inlineCode",{parentName:"p"},"boolean")),Object(l.b)("p",null,"DEFAULT ",Object(l.b)("inlineCode",{parentName:"p"},"false")),Object(l.b)("p",null,"Enable Office365 instead of classic outlook.live.com link in Outlook action"),Object(l.b)("h3",{id:"showfooter"},"showFooter"),Object(l.b)("p",null,"TYPE ",Object(l.b)("inlineCode",{parentName:"p"},"boolean")),Object(l.b)("p",null,"DEFAULT ",Object(l.b)("inlineCode",{parentName:"p"},"true")),Object(l.b)("p",null,"Show or not the footer in the modal with mailgo.dev link."),Object(l.b)("h3",{id:"initevent"},"initEvent"),Object(l.b)("p",null,"TYPE: ",Object(l.b)("inlineCode",{parentName:"p"},"string")),Object(l.b)("p",null,"DEFAULT ",Object(l.b)("inlineCode",{parentName:"p"},"DOMContentLoaded")),Object(l.b)("p",null,"The event used to trigger mailgo. If you pass a value then a listener will be attached to the event."),Object(l.b)("h4",{id:"example"},"Example"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'mailgoConfig = {\n  initEvent: "example-event",\n};\n')),Object(l.b)("p",null,"then the code executed is this"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'document.addEventListener("example-event", function () {\n  // mailgo here is started...\n});\n')),Object(l.b)("p",null,"In ",Object(l.b)("inlineCode",{parentName:"p"},"dist")," version of mailgo the event is ",Object(l.b)("inlineCode",{parentName:"p"},"DOMContentLoaded"),"."),Object(l.b)("h3",{id:"listeneroptions"},"listenerOptions"),Object(l.b)("p",null,"TYPE: ",Object(l.b)("inlineCode",{parentName:"p"},"ListenerOptions")," or ",Object(l.b)("inlineCode",{parentName:"p"},"boolean")),Object(l.b)("p",null,"DEFAULT ",Object(l.b)("inlineCode",{parentName:"p"},"false")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-ts"},"type ListenerOptions = {\n  capture?: boolean;\n  once?: boolean;\n  passive?: boolean;\n};\n")),Object(l.b)("p",null,"The third parameter of the ",Object(l.b)("inlineCode",{parentName:"p"},"addEventListener"),", complete reference: ",Object(l.b)("a",{parentName:"p",href:"https://developer.mozilla.org/it/docs/Web/API/Element/addEventListener"},"https://developer.mozilla.org/it/docs/Web/API/Element/addEventListener"),"."),Object(l.b)("p",null,"It is used only if an ",Object(l.b)("inlineCode",{parentName:"p"},"initEvent")," is specified."),Object(l.b)("h3",{id:"loadcss"},"loadCSS"),Object(l.b)("p",null,"TYPE ",Object(l.b)("inlineCode",{parentName:"p"},"boolean")),Object(l.b)("p",null,"DEFAULT ",Object(l.b)("inlineCode",{parentName:"p"},"true")),Object(l.b)("p",null,"Load mailgo CSS. ",Object(l.b)("inlineCode",{parentName:"p"},"true")," recommended."),Object(l.b)("h2",{id:"mailgo-configuration-in-window"},"Mailgo configuration in window"),Object(l.b)("p",null,"There is the possibility to define configuration for mailgo also adding it to the ",Object(l.b)("inlineCode",{parentName:"p"},"window")," object. You can simply add (BEFORE adding ",Object(l.b)("inlineCode",{parentName:"p"},"mailgo.min.js"),") a ",Object(l.b)("inlineCode",{parentName:"p"},"mailgoConfig")," attribute to the ",Object(l.b)("inlineCode",{parentName:"p"},"window")," that follows the ",Object(l.b)("inlineCode",{parentName:"p"},"MailgoConfig")," type."),Object(l.b)("p",null,"Here a simple example (in an ",Object(l.b)("inlineCode",{parentName:"p"},"html")," file)"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-html"},'<script>\n  // this object must follow the MailgoConfig type\n  window.mailgoConfig = {\n    dark: true,\n    showFooter: false,\n  };\n<\/script>\n\n<script src="../dist/mailgo.min.js"><\/script>\n')),Object(l.b)("p",null,"With this type of configuration the attribute ",Object(l.b)("inlineCode",{parentName:"p"},"initEvent")," and ",Object(l.b)("inlineCode",{parentName:"p"},"listenerOptions")," are not considered (because ",Object(l.b)("inlineCode",{parentName:"p"},"mailgo.min.js")," fires by default ad ",Object(l.b)("inlineCode",{parentName:"p"},"DOMContentLoaded")," with default ",Object(l.b)("inlineCode",{parentName:"p"},"ListenerOptions"),")."),Object(l.b)("p",null,"For more examples about this configuration see ",Object(l.b)("inlineCode",{parentName:"p"},"index.windowconfig.html")," in ",Object(l.b)("inlineCode",{parentName:"p"},"examples")," folder in mailgo repository."))}p.isMDXComponent=!0}}]);